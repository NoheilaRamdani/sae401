{% extends 'base.html.twig' %}

{% block title %}Accueil - Cahier de texte{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
    <style>
        .container {
            display: flex;
            gap: 20px;
        }
        .calendar-section {
            flex: 2;
        }
        .upcoming-section {
            flex: 1;
            background-color: #f5f5f5;
            padding: 15px;
            border-radius: 5px;
        }
        .event-item {
            padding: 10px;
            margin-bottom: 10px;
            border-left: 4px solid #3788d8;
            background-color: #fff;
            cursor: pointer;
        }
        .event-item:hover {
            background-color: #e9ecef;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            width: 400px;
        }
        .modal.show {
            display: flex;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation du calendrier
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: '/api/assignments',
                eventClick: function(info) {
                    info.jsEvent.preventDefault(); // Empêche la redirection
                    showEventDetails(info.event);
                }
            });
            calendar.render();

            // Gestion des clics sur les événements dans la liste
            document.querySelectorAll('.event-item').forEach(item => {
                item.addEventListener('click', function() {
                    const eventId = this.dataset.id;
                    fetch(`/api/assignments/${eventId}`)
                        .then(response => response.json())
                        .then(data => {
                            showEventDetails({
                                id: data.id,
                                title: data.title,
                                start: new Date(data.start),
                                extendedProps: {
                                    createdBy: data.createdBy,
                                    createdAt: data.createdAt,
                                    description: data.description,
                                    submissionUrl: data.submissionUrl
                                }
                            });
                        });
                });
            });

            // Fermer le modal
            document.getElementById('closeModal').addEventListener('click', function() {
                document.getElementById('eventModal').classList.remove('show');
            });
        });

        function showEventDetails(event) {
            document.getElementById('modalTitle').textContent = event.title;
            document.getElementById('modalDate').textContent = event.start.toLocaleString();
            document.getElementById('modalCreatedBy').textContent = event.extendedProps.createdBy || 'Inconnu';
            document.getElementById('modalCreatedAt').textContent = event.extendedProps.createdAt || 'Inconnu';
            document.getElementById('modalDescription').textContent = event.extendedProps.description || 'Aucune description';
            const submissionUrlEl = document.getElementById('modalSubmissionUrl');
            if (event.extendedProps.submissionUrl) {
                submissionUrlEl.innerHTML = `<a href="${event.extendedProps.submissionUrl}" target="_blank">${event.extendedProps.submissionUrl}</a>`;
            } else {
                submissionUrlEl.textContent = 'Aucune URL de soumission';
            }
            document.getElementById('eventModal').classList.add('show');
        }
    </script>
{% endblock %}

{% block body %}
    <div class="container">
        <div class="calendar-section">
            <h2>Calendrier des devoirs</h2>
            <div id="calendar"></div>
        </div>

        <div class="upcoming-section">
            <h2>Prochains devoirs</h2>
            {% if assignments|length > 0 %}
                {% for assignment in assignments %}
                    <div class="event-item" data-id="{{ assignment.id }}">
                        <strong>{{ assignment.title }}</strong><br>
                        <small>{{ assignment.dueDate|date('d/m/Y H:i') }}</small>
                    </div>
                {% endfor %}
            {% else %}
                <p>Aucun devoir à venir.</p>
            {% endif %}
        </div>
    </div>

    <!-- Modal pour les détails -->
    <div id="eventModal" class="modal">
        <div class="modal-content">
            <h3 id="modalTitle"></h3>
            <p><strong>Date :</strong> <span id="modalDate"></span></p>
            <p><strong>Date de saisie :</strong> <span id="modalCreatedAt"></span></p>
            <p><strong>Description :</strong> <span id="modalDescription"></span></p>
            <p><strong>URL de soumission :</strong> <span id="modalSubmissionUrl"></span></p>
            <button id="closeModal">Fermer</button>
        </div>
    </div>
{% endblock %}